// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

syntax = "proto3";
package saturn_sync_protocol.v1;

service TaskService {
  rpc ExecuteActions(ExecuteActionsRequest) returns (ExecuteActionsResponse) {}
  rpc ExecuteFilters(ExecuteFiltersRequest) returns (ExecuteFiltersResponse) {}
  rpc ListTasks(ListTasksRequest) returns (ListTasksResponse) {}
  rpc OnPrClosed(OnPrClosedRequest) returns (OnPrClosedResponse) {}
  rpc OnPrCreated(OnPrCreatedRequest) returns (OnPrCreatedResponse) {}
  rpc OnPrMerged(OnPrMergedRequest) returns (OnPrMergedResponse) {}
}

message ExecuteActionsRequest {
  string task_name = 1;
  string path = 2;
  Context context = 3;
}

message ExecuteActionsResponse {
  optional string error = 1;
}

message ExecuteFiltersRequest {
  string task_name = 1;
  Context context = 2;
}

message ExecuteFiltersResponse {
  bool match = 1;
  optional string error = 2;
}

message ListTasksRequest {
  bytes custom_config = 1;
}

message ListTasksResponse {
  repeated Task tasks = 1;
  optional string error = 2;
}

message Action {
  // @gotags: yaml:"file,omitempty"
  optional ActionFile file = 1;
}

message ActionFile {
  // @gotags: yaml:"content,omitempty"
  string content = 1;
  // @gotags: yaml:"mode,omitempty"
  optional string mode = 2;
  // @gotags: yaml:"path,omitempty"
  string path = 3;
  // @gotags: yaml:"state,omitempty"
  string state = 4;
}

message Context {
  Repository repository = 1; // Details on the repository to filter or apply actions to.
}

message Repository {
  string full_name = 1;
  string clone_url_http = 2;
  string clone_url_ssh = 3;
  string web_url = 4;
}

message Filter {
  // @gotags: yaml:"file,omitempty"
  optional FilterFile file = 1;
  // @gotags: yaml:"lineInFile,omitempty"
  optional FilterLineInFile line_in_file = 2;
  // @gotags: yaml:"repositoryName,omitempty"
  optional FilterRepositoryName repository_name = 3;
  // @gotags: yaml:"reverse,omitempty"
  optional bool reverse = 4;
}

message FilterLineInFile {
  // @gotags: yaml:"path,omitempty"
  string path = 1;
  // @gotags: yaml:"search,omitempty"
  string search = 2;
}

message FilterFile {
  // @gotags: yaml:"path,omitempty"
  string path = 1;
}

message FilterRepositoryName {
  // @gotags: yaml:"names,omitempty"
  repeated string names = 1;
}

message OnPrClosedRequest {
  string task_name = 1;
  Context context = 2;
}

message OnPrClosedResponse {
  optional string error = 1;
}

message OnPrCreatedRequest {
  string task_name = 1;
  Context context = 2;
}

message OnPrCreatedResponse {
  optional string error = 1;
}

message OnPrMergedRequest {
  string task_name = 1;
  Context context = 2;
}

message OnPrMergedResponse {
  optional string error = 1;
}

message Task {
  // The name of the Task.
  // It identifies a task.
  string name = 1;
  // @gotags: yaml:"autoMerge,omitempty"
  optional bool auto_merge = 2;
  // @gotags: yaml:"autoMergeAfterSeconds,omitempty"
  optional int32 auto_merge_after_seconds = 3;
  // @gotags: yaml:"branchName,omitempty"
  optional string branch_name = 4;
  // @gotags: yaml:"changeLimit,omitempty"
  optional int32 change_limit = 5;
  // @gotags: yaml:"commitMessage,omitempty"
  optional string commit_message = 6;
  // @gotags: yaml:"createOnly,omitempty"
  optional bool create_only = 7;
  // @gotags: yaml:"disabled,omitempty"
  optional bool disabled = 8;
  // @gotags: yaml:"keepBranchAfterMerge,omitempty"
  optional bool keep_branch_after_merge = 9;
  repeated string labels = 10;
  // @gotags: yaml:"mergeOnce,omitempty"
  optional bool merge_once = 11;
  // @gotags: yaml:"prBody,omitempty"
  optional string pr_body = 12;
  // @gotags: yaml:"prTitle,omitempty"
  optional string pr_title = 13;
  // @gotags: yaml:"filters,omitempty"
  repeated Filter filters = 14;
  // @gotags: yaml:"actions,omitempty"
  repeated Action actions = 15;
}
