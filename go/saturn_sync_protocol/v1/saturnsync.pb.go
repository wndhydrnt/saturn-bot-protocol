// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: saturn_sync_protocol/v1/saturnsync.proto

package saturn_sync_protocolv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExecuteActionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskName string   `protobuf:"bytes,1,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	Path     string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Context  *Context `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *ExecuteActionsRequest) Reset() {
	*x = ExecuteActionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteActionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteActionsRequest) ProtoMessage() {}

func (x *ExecuteActionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteActionsRequest.ProtoReflect.Descriptor instead.
func (*ExecuteActionsRequest) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{0}
}

func (x *ExecuteActionsRequest) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *ExecuteActionsRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ExecuteActionsRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type ExecuteActionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *string `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *ExecuteActionsResponse) Reset() {
	*x = ExecuteActionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteActionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteActionsResponse) ProtoMessage() {}

func (x *ExecuteActionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteActionsResponse.ProtoReflect.Descriptor instead.
func (*ExecuteActionsResponse) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{1}
}

func (x *ExecuteActionsResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type ExecuteFiltersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskName string   `protobuf:"bytes,1,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	Context  *Context `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *ExecuteFiltersRequest) Reset() {
	*x = ExecuteFiltersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteFiltersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteFiltersRequest) ProtoMessage() {}

func (x *ExecuteFiltersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteFiltersRequest.ProtoReflect.Descriptor instead.
func (*ExecuteFiltersRequest) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{2}
}

func (x *ExecuteFiltersRequest) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *ExecuteFiltersRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type ExecuteFiltersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match bool    `protobuf:"varint,1,opt,name=match,proto3" json:"match,omitempty"`
	Error *string `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *ExecuteFiltersResponse) Reset() {
	*x = ExecuteFiltersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteFiltersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteFiltersResponse) ProtoMessage() {}

func (x *ExecuteFiltersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteFiltersResponse.ProtoReflect.Descriptor instead.
func (*ExecuteFiltersResponse) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{3}
}

func (x *ExecuteFiltersResponse) GetMatch() bool {
	if x != nil {
		return x.Match
	}
	return false
}

func (x *ExecuteFiltersResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type ListTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomConfig []byte `protobuf:"bytes,1,opt,name=custom_config,json=customConfig,proto3" json:"custom_config,omitempty"`
}

func (x *ListTasksRequest) Reset() {
	*x = ListTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksRequest) ProtoMessage() {}

func (x *ListTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksRequest.ProtoReflect.Descriptor instead.
func (*ListTasksRequest) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{4}
}

func (x *ListTasksRequest) GetCustomConfig() []byte {
	if x != nil {
		return x.CustomConfig
	}
	return nil
}

type ListTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*Task `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Error *string `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *ListTasksResponse) Reset() {
	*x = ListTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksResponse) ProtoMessage() {}

func (x *ListTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksResponse.ProtoReflect.Descriptor instead.
func (*ListTasksResponse) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{5}
}

func (x *ListTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *ListTasksResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File *ActionFile `protobuf:"bytes,1,opt,name=file,proto3,oneof" json:"file,omitempty" yaml:"file,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{6}
}

func (x *Action) GetFile() *ActionFile {
	if x != nil {
		return x.File
	}
	return nil
}

type ActionFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty" yaml:"content,omitempty"`

	Mode *string `protobuf:"bytes,2,opt,name=mode,proto3,oneof" json:"mode,omitempty" yaml:"mode,omitempty"`

	Path string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty" yaml:"path,omitempty"`

	State string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty" yaml:"state,omitempty"`
}

func (x *ActionFile) Reset() {
	*x = ActionFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionFile) ProtoMessage() {}

func (x *ActionFile) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionFile.ProtoReflect.Descriptor instead.
func (*ActionFile) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{7}
}

func (x *ActionFile) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ActionFile) GetMode() string {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return ""
}

func (x *ActionFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ActionFile) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type Context struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repository *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"` // Details on the repository to filter or apply actions to.
}

func (x *Context) Reset() {
	*x = Context{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Context) ProtoMessage() {}

func (x *Context) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Context.ProtoReflect.Descriptor instead.
func (*Context) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{8}
}

func (x *Context) GetRepository() *Repository {
	if x != nil {
		return x.Repository
	}
	return nil
}

type Repository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullName     string `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	CloneUrlHttp string `protobuf:"bytes,2,opt,name=clone_url_http,json=cloneUrlHttp,proto3" json:"clone_url_http,omitempty"`
	CloneUrlSsh  string `protobuf:"bytes,3,opt,name=clone_url_ssh,json=cloneUrlSsh,proto3" json:"clone_url_ssh,omitempty"`
	WebUrl       string `protobuf:"bytes,4,opt,name=web_url,json=webUrl,proto3" json:"web_url,omitempty"`
}

func (x *Repository) Reset() {
	*x = Repository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Repository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repository) ProtoMessage() {}

func (x *Repository) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repository.ProtoReflect.Descriptor instead.
func (*Repository) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{9}
}

func (x *Repository) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Repository) GetCloneUrlHttp() string {
	if x != nil {
		return x.CloneUrlHttp
	}
	return ""
}

func (x *Repository) GetCloneUrlSsh() string {
	if x != nil {
		return x.CloneUrlSsh
	}
	return ""
}

func (x *Repository) GetWebUrl() string {
	if x != nil {
		return x.WebUrl
	}
	return ""
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File *FilterFile `protobuf:"bytes,1,opt,name=file,proto3,oneof" json:"file,omitempty" yaml:"file,omitempty"`

	LineInFile *FilterLineInFile `protobuf:"bytes,2,opt,name=line_in_file,json=lineInFile,proto3,oneof" json:"line_in_file,omitempty" yaml:"lineInFile,omitempty"`

	RepositoryName *FilterRepositoryName `protobuf:"bytes,3,opt,name=repository_name,json=repositoryName,proto3,oneof" json:"repository_name,omitempty" yaml:"repositoryName,omitempty"`

	Reverse *bool `protobuf:"varint,4,opt,name=reverse,proto3,oneof" json:"reverse,omitempty" yaml:"reverse,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{10}
}

func (x *Filter) GetFile() *FilterFile {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *Filter) GetLineInFile() *FilterLineInFile {
	if x != nil {
		return x.LineInFile
	}
	return nil
}

func (x *Filter) GetRepositoryName() *FilterRepositoryName {
	if x != nil {
		return x.RepositoryName
	}
	return nil
}

func (x *Filter) GetReverse() bool {
	if x != nil && x.Reverse != nil {
		return *x.Reverse
	}
	return false
}

type FilterLineInFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty" yaml:"path,omitempty"`

	Search string `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty" yaml:"search,omitempty"`
}

func (x *FilterLineInFile) Reset() {
	*x = FilterLineInFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterLineInFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterLineInFile) ProtoMessage() {}

func (x *FilterLineInFile) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterLineInFile.ProtoReflect.Descriptor instead.
func (*FilterLineInFile) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{11}
}

func (x *FilterLineInFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FilterLineInFile) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type FilterFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty" yaml:"path,omitempty"`
}

func (x *FilterFile) Reset() {
	*x = FilterFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterFile) ProtoMessage() {}

func (x *FilterFile) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterFile.ProtoReflect.Descriptor instead.
func (*FilterFile) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{12}
}

func (x *FilterFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FilterRepositoryName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty" yaml:"names,omitempty"`
}

func (x *FilterRepositoryName) Reset() {
	*x = FilterRepositoryName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterRepositoryName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterRepositoryName) ProtoMessage() {}

func (x *FilterRepositoryName) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterRepositoryName.ProtoReflect.Descriptor instead.
func (*FilterRepositoryName) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{13}
}

func (x *FilterRepositoryName) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type OnPrClosedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskName string   `protobuf:"bytes,1,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	Context  *Context `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *OnPrClosedRequest) Reset() {
	*x = OnPrClosedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnPrClosedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnPrClosedRequest) ProtoMessage() {}

func (x *OnPrClosedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnPrClosedRequest.ProtoReflect.Descriptor instead.
func (*OnPrClosedRequest) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{14}
}

func (x *OnPrClosedRequest) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *OnPrClosedRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type OnPrClosedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *string `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *OnPrClosedResponse) Reset() {
	*x = OnPrClosedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnPrClosedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnPrClosedResponse) ProtoMessage() {}

func (x *OnPrClosedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnPrClosedResponse.ProtoReflect.Descriptor instead.
func (*OnPrClosedResponse) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{15}
}

func (x *OnPrClosedResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type OnPrCreatedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskName string   `protobuf:"bytes,1,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	Context  *Context `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *OnPrCreatedRequest) Reset() {
	*x = OnPrCreatedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnPrCreatedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnPrCreatedRequest) ProtoMessage() {}

func (x *OnPrCreatedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnPrCreatedRequest.ProtoReflect.Descriptor instead.
func (*OnPrCreatedRequest) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{16}
}

func (x *OnPrCreatedRequest) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *OnPrCreatedRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type OnPrCreatedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *string `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *OnPrCreatedResponse) Reset() {
	*x = OnPrCreatedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnPrCreatedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnPrCreatedResponse) ProtoMessage() {}

func (x *OnPrCreatedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnPrCreatedResponse.ProtoReflect.Descriptor instead.
func (*OnPrCreatedResponse) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{17}
}

func (x *OnPrCreatedResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type OnPrMergedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskName string   `protobuf:"bytes,1,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	Context  *Context `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *OnPrMergedRequest) Reset() {
	*x = OnPrMergedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnPrMergedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnPrMergedRequest) ProtoMessage() {}

func (x *OnPrMergedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnPrMergedRequest.ProtoReflect.Descriptor instead.
func (*OnPrMergedRequest) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{18}
}

func (x *OnPrMergedRequest) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *OnPrMergedRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type OnPrMergedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *string `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *OnPrMergedResponse) Reset() {
	*x = OnPrMergedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnPrMergedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnPrMergedResponse) ProtoMessage() {}

func (x *OnPrMergedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnPrMergedResponse.ProtoReflect.Descriptor instead.
func (*OnPrMergedResponse) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{19}
}

func (x *OnPrMergedResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the Task.
	// It identifies a task.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`

	AutoMerge *bool `protobuf:"varint,2,opt,name=auto_merge,json=autoMerge,proto3,oneof" json:"auto_merge,omitempty" yaml:"autoMerge,omitempty"`

	AutoMergeAfterSeconds *int32 `protobuf:"varint,3,opt,name=auto_merge_after_seconds,json=autoMergeAfterSeconds,proto3,oneof" json:"auto_merge_after_seconds,omitempty" yaml:"autoMergeAfterSeconds,omitempty"`

	BranchName *string `protobuf:"bytes,4,opt,name=branch_name,json=branchName,proto3,oneof" json:"branch_name,omitempty" yaml:"branchName,omitempty"`

	ChangeLimit *int32 `protobuf:"varint,5,opt,name=change_limit,json=changeLimit,proto3,oneof" json:"change_limit,omitempty" yaml:"changeLimit,omitempty"`

	CommitMessage *string `protobuf:"bytes,6,opt,name=commit_message,json=commitMessage,proto3,oneof" json:"commit_message,omitempty" yaml:"commitMessage,omitempty"`

	CreateOnly *bool `protobuf:"varint,7,opt,name=create_only,json=createOnly,proto3,oneof" json:"create_only,omitempty" yaml:"createOnly,omitempty"`

	Disabled *bool `protobuf:"varint,8,opt,name=disabled,proto3,oneof" json:"disabled,omitempty" yaml:"disabled,omitempty"`

	KeepBranchAfterMerge *bool    `protobuf:"varint,9,opt,name=keep_branch_after_merge,json=keepBranchAfterMerge,proto3,oneof" json:"keep_branch_after_merge,omitempty" yaml:"keepBranchAfterMerge,omitempty"`
	Labels               []string `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty"`

	MergeOnce *bool `protobuf:"varint,11,opt,name=merge_once,json=mergeOnce,proto3,oneof" json:"merge_once,omitempty" yaml:"mergeOnce,omitempty"`

	PrBody *string `protobuf:"bytes,12,opt,name=pr_body,json=prBody,proto3,oneof" json:"pr_body,omitempty" yaml:"prBody,omitempty"`

	PrTitle *string `protobuf:"bytes,13,opt,name=pr_title,json=prTitle,proto3,oneof" json:"pr_title,omitempty" yaml:"prTitle,omitempty"`

	Filters []*Filter `protobuf:"bytes,14,rep,name=filters,proto3" json:"filters,omitempty" yaml:"filters,omitempty"`

	Actions []*Action `protobuf:"bytes,15,rep,name=actions,proto3" json:"actions,omitempty" yaml:"actions,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP(), []int{20}
}

func (x *Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task) GetAutoMerge() bool {
	if x != nil && x.AutoMerge != nil {
		return *x.AutoMerge
	}
	return false
}

func (x *Task) GetAutoMergeAfterSeconds() int32 {
	if x != nil && x.AutoMergeAfterSeconds != nil {
		return *x.AutoMergeAfterSeconds
	}
	return 0
}

func (x *Task) GetBranchName() string {
	if x != nil && x.BranchName != nil {
		return *x.BranchName
	}
	return ""
}

func (x *Task) GetChangeLimit() int32 {
	if x != nil && x.ChangeLimit != nil {
		return *x.ChangeLimit
	}
	return 0
}

func (x *Task) GetCommitMessage() string {
	if x != nil && x.CommitMessage != nil {
		return *x.CommitMessage
	}
	return ""
}

func (x *Task) GetCreateOnly() bool {
	if x != nil && x.CreateOnly != nil {
		return *x.CreateOnly
	}
	return false
}

func (x *Task) GetDisabled() bool {
	if x != nil && x.Disabled != nil {
		return *x.Disabled
	}
	return false
}

func (x *Task) GetKeepBranchAfterMerge() bool {
	if x != nil && x.KeepBranchAfterMerge != nil {
		return *x.KeepBranchAfterMerge
	}
	return false
}

func (x *Task) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Task) GetMergeOnce() bool {
	if x != nil && x.MergeOnce != nil {
		return *x.MergeOnce
	}
	return false
}

func (x *Task) GetPrBody() string {
	if x != nil && x.PrBody != nil {
		return *x.PrBody
	}
	return ""
}

func (x *Task) GetPrTitle() string {
	if x != nil && x.PrTitle != nil {
		return *x.PrTitle
	}
	return ""
}

func (x *Task) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *Task) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

var File_saturn_sync_protocol_v1_saturnsync_proto protoreflect.FileDescriptor

var file_saturn_sync_protocol_v1_saturnsync_proto_rawDesc = []byte{
	0x0a, 0x28, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e,
	0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x73, 0x61, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x22, 0x84, 0x01, 0x0a, 0x15, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3a,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x3d, 0x0a, 0x16, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x70, 0x0a, 0x15, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x53, 0x0a, 0x16, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x37, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x6d, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4f, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x72, 0x0a, 0x0a, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x17, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x4e, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x43, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73,
	0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x8c, 0x01,
	0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6c, 0x6f,
	0x6e, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x55, 0x72, 0x6c, 0x48, 0x74, 0x74, 0x70, 0x12,
	0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x73, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x55, 0x72, 0x6c,
	0x53, 0x73, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x62, 0x55, 0x72, 0x6c, 0x22, 0xce, 0x02, 0x0a,
	0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73,
	0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x50, 0x0a, 0x0c, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x6e,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x61,
	0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x65,
	0x49, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x01, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e,
	0x46, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x5b, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x48,
	0x02, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x22, 0x3e, 0x0a,
	0x10, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x20, 0x0a,
	0x0a, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22,
	0x2c, 0x0a, 0x14, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x6c, 0x0a,
	0x11, 0x4f, 0x6e, 0x50, 0x72, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x39, 0x0a, 0x12, 0x4f,
	0x6e, 0x50, 0x72, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x6d, 0x0a, 0x12, 0x4f, 0x6e, 0x50, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x61, 0x74,
	0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x3a, 0x0a, 0x13, 0x4f, 0x6e, 0x50, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x6c, 0x0a, 0x11, 0x4f, 0x6e, 0x50, 0x72, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79,
	0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22,
	0x39, 0x0a, 0x12, 0x4f, 0x6e, 0x50, 0x72, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xaa, 0x06, 0x0a, 0x04, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x5f,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x61,
	0x75, 0x74, 0x6f, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x18, 0x61,
	0x75, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52,
	0x15, 0x61, 0x75, 0x74, 0x6f, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06, 0x52, 0x08, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x17, 0x6b, 0x65,
	0x65, 0x70, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x14, 0x6b,
	0x65, 0x65, 0x70, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x65,
	0x72, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x22,
	0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x08, 0x52, 0x09, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x4f, 0x6e, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x70, 0x72, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x06, 0x70, 0x72, 0x42, 0x6f, 0x64, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x70, 0x72, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0a, 0x52, 0x07, 0x70, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x39, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73,
	0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x6d,
	0x65, 0x72, 0x67, 0x65, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x70, 0x72, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70,
	0x72, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x32, 0x9b, 0x05, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x2e, 0x73, 0x61, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73, 0x61, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2e,
	0x2e, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x64, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x29,
	0x2e, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x61, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x0a, 0x4f, 0x6e, 0x50, 0x72, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x2a, 0x2e, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73,
	0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x6e, 0x50, 0x72, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x50, 0x72,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6a, 0x0a, 0x0b, 0x4f, 0x6e, 0x50, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x2b, 0x2e, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x50, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73,
	0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x50, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x0a,
	0x4f, 0x6e, 0x50, 0x72, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x64, 0x12, 0x2a, 0x2e, 0x73, 0x61, 0x74,
	0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x50, 0x72, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x6e, 0x50, 0x72, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xfd, 0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x61,
	0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x79, 0x6e,
	0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x58, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x6e, 0x64, 0x68, 0x79, 0x64, 0x72, 0x6e, 0x74, 0x2f, 0x73,
	0x61, 0x74, 0x75, 0x72, 0x6e, 0x2d, 0x73, 0x79, 0x6e, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x61, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58, 0xaa, 0x02, 0x15, 0x53, 0x61, 0x74, 0x75, 0x72,
	0x6e, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x15, 0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x21, 0x53, 0x61, 0x74, 0x75, 0x72,
	0x6e, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x16, 0x53,
	0x61, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_saturn_sync_protocol_v1_saturnsync_proto_rawDescOnce sync.Once
	file_saturn_sync_protocol_v1_saturnsync_proto_rawDescData = file_saturn_sync_protocol_v1_saturnsync_proto_rawDesc
)

func file_saturn_sync_protocol_v1_saturnsync_proto_rawDescGZIP() []byte {
	file_saturn_sync_protocol_v1_saturnsync_proto_rawDescOnce.Do(func() {
		file_saturn_sync_protocol_v1_saturnsync_proto_rawDescData = protoimpl.X.CompressGZIP(file_saturn_sync_protocol_v1_saturnsync_proto_rawDescData)
	})
	return file_saturn_sync_protocol_v1_saturnsync_proto_rawDescData
}

var file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_saturn_sync_protocol_v1_saturnsync_proto_goTypes = []interface{}{
	(*ExecuteActionsRequest)(nil),  // 0: saturn_sync_protocol.v1.ExecuteActionsRequest
	(*ExecuteActionsResponse)(nil), // 1: saturn_sync_protocol.v1.ExecuteActionsResponse
	(*ExecuteFiltersRequest)(nil),  // 2: saturn_sync_protocol.v1.ExecuteFiltersRequest
	(*ExecuteFiltersResponse)(nil), // 3: saturn_sync_protocol.v1.ExecuteFiltersResponse
	(*ListTasksRequest)(nil),       // 4: saturn_sync_protocol.v1.ListTasksRequest
	(*ListTasksResponse)(nil),      // 5: saturn_sync_protocol.v1.ListTasksResponse
	(*Action)(nil),                 // 6: saturn_sync_protocol.v1.Action
	(*ActionFile)(nil),             // 7: saturn_sync_protocol.v1.ActionFile
	(*Context)(nil),                // 8: saturn_sync_protocol.v1.Context
	(*Repository)(nil),             // 9: saturn_sync_protocol.v1.Repository
	(*Filter)(nil),                 // 10: saturn_sync_protocol.v1.Filter
	(*FilterLineInFile)(nil),       // 11: saturn_sync_protocol.v1.FilterLineInFile
	(*FilterFile)(nil),             // 12: saturn_sync_protocol.v1.FilterFile
	(*FilterRepositoryName)(nil),   // 13: saturn_sync_protocol.v1.FilterRepositoryName
	(*OnPrClosedRequest)(nil),      // 14: saturn_sync_protocol.v1.OnPrClosedRequest
	(*OnPrClosedResponse)(nil),     // 15: saturn_sync_protocol.v1.OnPrClosedResponse
	(*OnPrCreatedRequest)(nil),     // 16: saturn_sync_protocol.v1.OnPrCreatedRequest
	(*OnPrCreatedResponse)(nil),    // 17: saturn_sync_protocol.v1.OnPrCreatedResponse
	(*OnPrMergedRequest)(nil),      // 18: saturn_sync_protocol.v1.OnPrMergedRequest
	(*OnPrMergedResponse)(nil),     // 19: saturn_sync_protocol.v1.OnPrMergedResponse
	(*Task)(nil),                   // 20: saturn_sync_protocol.v1.Task
}
var file_saturn_sync_protocol_v1_saturnsync_proto_depIdxs = []int32{
	8,  // 0: saturn_sync_protocol.v1.ExecuteActionsRequest.context:type_name -> saturn_sync_protocol.v1.Context
	8,  // 1: saturn_sync_protocol.v1.ExecuteFiltersRequest.context:type_name -> saturn_sync_protocol.v1.Context
	20, // 2: saturn_sync_protocol.v1.ListTasksResponse.tasks:type_name -> saturn_sync_protocol.v1.Task
	7,  // 3: saturn_sync_protocol.v1.Action.file:type_name -> saturn_sync_protocol.v1.ActionFile
	9,  // 4: saturn_sync_protocol.v1.Context.repository:type_name -> saturn_sync_protocol.v1.Repository
	12, // 5: saturn_sync_protocol.v1.Filter.file:type_name -> saturn_sync_protocol.v1.FilterFile
	11, // 6: saturn_sync_protocol.v1.Filter.line_in_file:type_name -> saturn_sync_protocol.v1.FilterLineInFile
	13, // 7: saturn_sync_protocol.v1.Filter.repository_name:type_name -> saturn_sync_protocol.v1.FilterRepositoryName
	8,  // 8: saturn_sync_protocol.v1.OnPrClosedRequest.context:type_name -> saturn_sync_protocol.v1.Context
	8,  // 9: saturn_sync_protocol.v1.OnPrCreatedRequest.context:type_name -> saturn_sync_protocol.v1.Context
	8,  // 10: saturn_sync_protocol.v1.OnPrMergedRequest.context:type_name -> saturn_sync_protocol.v1.Context
	10, // 11: saturn_sync_protocol.v1.Task.filters:type_name -> saturn_sync_protocol.v1.Filter
	6,  // 12: saturn_sync_protocol.v1.Task.actions:type_name -> saturn_sync_protocol.v1.Action
	0,  // 13: saturn_sync_protocol.v1.TaskService.ExecuteActions:input_type -> saturn_sync_protocol.v1.ExecuteActionsRequest
	2,  // 14: saturn_sync_protocol.v1.TaskService.ExecuteFilters:input_type -> saturn_sync_protocol.v1.ExecuteFiltersRequest
	4,  // 15: saturn_sync_protocol.v1.TaskService.ListTasks:input_type -> saturn_sync_protocol.v1.ListTasksRequest
	14, // 16: saturn_sync_protocol.v1.TaskService.OnPrClosed:input_type -> saturn_sync_protocol.v1.OnPrClosedRequest
	16, // 17: saturn_sync_protocol.v1.TaskService.OnPrCreated:input_type -> saturn_sync_protocol.v1.OnPrCreatedRequest
	18, // 18: saturn_sync_protocol.v1.TaskService.OnPrMerged:input_type -> saturn_sync_protocol.v1.OnPrMergedRequest
	1,  // 19: saturn_sync_protocol.v1.TaskService.ExecuteActions:output_type -> saturn_sync_protocol.v1.ExecuteActionsResponse
	3,  // 20: saturn_sync_protocol.v1.TaskService.ExecuteFilters:output_type -> saturn_sync_protocol.v1.ExecuteFiltersResponse
	5,  // 21: saturn_sync_protocol.v1.TaskService.ListTasks:output_type -> saturn_sync_protocol.v1.ListTasksResponse
	15, // 22: saturn_sync_protocol.v1.TaskService.OnPrClosed:output_type -> saturn_sync_protocol.v1.OnPrClosedResponse
	17, // 23: saturn_sync_protocol.v1.TaskService.OnPrCreated:output_type -> saturn_sync_protocol.v1.OnPrCreatedResponse
	19, // 24: saturn_sync_protocol.v1.TaskService.OnPrMerged:output_type -> saturn_sync_protocol.v1.OnPrMergedResponse
	19, // [19:25] is the sub-list for method output_type
	13, // [13:19] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_saturn_sync_protocol_v1_saturnsync_proto_init() }
func file_saturn_sync_protocol_v1_saturnsync_proto_init() {
	if File_saturn_sync_protocol_v1_saturnsync_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteActionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteActionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteFiltersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteFiltersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Context); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Repository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterLineInFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterRepositoryName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnPrClosedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnPrClosedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnPrCreatedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnPrCreatedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnPrMergedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnPrMergedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes[20].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_saturn_sync_protocol_v1_saturnsync_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_saturn_sync_protocol_v1_saturnsync_proto_goTypes,
		DependencyIndexes: file_saturn_sync_protocol_v1_saturnsync_proto_depIdxs,
		MessageInfos:      file_saturn_sync_protocol_v1_saturnsync_proto_msgTypes,
	}.Build()
	File_saturn_sync_protocol_v1_saturnsync_proto = out.File
	file_saturn_sync_protocol_v1_saturnsync_proto_rawDesc = nil
	file_saturn_sync_protocol_v1_saturnsync_proto_goTypes = nil
	file_saturn_sync_protocol_v1_saturnsync_proto_depIdxs = nil
}
